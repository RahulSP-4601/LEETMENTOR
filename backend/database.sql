-- ‚úÖ Enable UUID support (only once per database)
CREATE EXTENSION IF NOT EXISTS "pgcrypto";

-- üë§ Users Table
CREATE TABLE USERS (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR NOT NULL,
    EMAIL VARCHAR UNIQUE NOT NULL,
    PASSWORD TEXT NOT NULL,
    JWT_TOKEN TEXT,
    CREATED_AT TIMESTAMP DEFAULT NOW()
);

-- üîê User Tokens Table
CREATE TABLE USER_TOKENS (
    ID SERIAL PRIMARY KEY,
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
    TOKEN TEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    EXPIRES_AT TIMESTAMP,
    REVOKED BOOLEAN DEFAULT FALSE
);

-- üìò Problems Table
CREATE TABLE PROBLEMS (
    ID SERIAL PRIMARY KEY,
    TITLE VARCHAR UNIQUE NOT NULL,
    DESCRIPTION TEXT,
    DIFFICULTY VARCHAR CHECK (DIFFICULTY IN ('Easy', 'Medium', 'Hard')),
    CATEGORY VARCHAR
);

-- üß™ Test Cases (linked to Problems)
CREATE TABLE TEST_CASES (
    ID SERIAL PRIMARY KEY,
    PROBLEM_ID INT REFERENCES PROBLEMS(ID) ON DELETE CASCADE,
    INPUT TEXT,
    EXPECTED_OUTPUT TEXT
);

-- üíª Submissions (linked to Users + Problems)
CREATE TABLE SUBMISSIONS (
    ID SERIAL PRIMARY KEY,
    USER_ID INT REFERENCES USERS(ID) ON DELETE CASCADE,
    PROBLEM_ID INT REFERENCES PROBLEMS(ID) ON DELETE CASCADE,
    CODE TEXT,
    LANGUAGE VARCHAR,
    RESULT TEXT,
    RUNTIME_MS INT,
    CREATED_AT TIMESTAMP DEFAULT NOW()
);

-- ü§ñ AI Explanations (linked to Users + Problems)
CREATE TABLE AI_EXPLANATIONS (
    ID SERIAL PRIMARY KEY,
    USER_ID INT REFERENCES USERS(ID) ON DELETE CASCADE,
    PROBLEM_ID INT REFERENCES PROBLEMS(ID) ON DELETE CASCADE,
    TYPE VARCHAR CHECK (TYPE IN ('hint', 'explanation')),
    CONTENT TEXT,
    CREATED_AT TIMESTAMP DEFAULT NOW()
);

-- üó£Ô∏è Mock Interviews (linked to Users + Problems)
CREATE TABLE MOCK_INTERVIEWS (
    ID SERIAL PRIMARY KEY,
    USER_ID INT REFERENCES USERS(ID) ON DELETE CASCADE,
    PROBLEM_ID INT REFERENCES PROBLEMS(ID) ON DELETE CASCADE,
    STARTED_AT TIMESTAMP,
    ENDED_AT TIMESTAMP,
    FEEDBACK TEXT
);

-- ‚ùì Interview Questions (linked to Mock Interviews)
CREATE TABLE INTERVIEW_QUESTIONS (
    ID SERIAL PRIMARY KEY,
    INTERVIEW_ID INT REFERENCES MOCK_INTERVIEWS(ID) ON DELETE CASCADE,
    QUESTION TEXT,
    ANSWER TEXT,
    TIMESTAMP TIMESTAMP DEFAULT NOW()
);

-- üí≥ Payments (linked to Users)
CREATE TABLE PAYMENTS (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    USER_ID INT REFERENCES USERS(ID) ON DELETE CASCADE,
    AMOUNT DECIMAL(10, 2),
    CURRENCY VARCHAR,
    STATUS VARCHAR CHECK (STATUS IN ('success', 'failed')),
    CREATED_AT TIMESTAMP DEFAULT NOW()
);

CREATE USER LEETMENTOR_USER WITH PASSWORD 'Riddhi@009';

CREATE DATABASE LEETMENTOR_DB OWNER LEETMENTOR_USER;

GRANT ALL PRIVILEGES ON DATABASE LEETMENTOR_DB TO LEETMENTOR_USER;

ALTER TABLE USERS
    ADD COLUMN PASSWORD TEXT NOT NULL;